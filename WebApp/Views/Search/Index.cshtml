@using Microsoft.AspNetCore.Components
@using Microsoft.EntityFrameworkCore.Query.Internal
@using WebApp.Data
@using HtmlGeneration.XmlToHtmlTree
@model EntityQueryable<DatabaseAsset>

@{
    ViewData["Title"] = "Search";
}

<div style="font-size: 16px">
    <div class="navbar" style="float: left; width: 100%">
        <div>
            <label for="perPageSelect" style="white-space: pre-wrap">Results per page </label>
            <select id="perPageSelect" onchange="search()">
                <option>5</option>
                <option>10</option>
                <option>20</option>
                <option>50</option>
            </select>
            <script>document.getElementById('perPageSelect').value = '@ViewData["PerPage"]'</script>
        </div>
    </div>
    <div class="container">
        @if (!Model.Any())
        {
            <div>
                No results
            </div>
        }
        @foreach(DatabaseAsset asset in Model.AsEnumerable())
        {
            try{
                <i class="fa fa-code" style="cursor: pointer" onclick="window.open('/asset?guid=@asset.GUID', '_blank')"></i>@AssetXmlMap.Summary(asset)
                @Html.Raw(XmlToHtmlTreeConverter.XmlToHtmlConvert(AssetXmlMap.PrettyPrint(asset)))
                <br />
            } catch (Exception ex)
            {
                Console.Error.WriteLine($"Error {ex.GetType()} in View/Index.cshtml\nThe parsed xml code was:");
                Console.Error.WriteLine(AssetXmlMap.PrettyPrint(asset));
            }
        }
    </div>
    <br/>
    <div style="width: 100%; text-align: left">
        <button onclick="search(1)" style="height: 30px; width: 30px" @if(1 == (int)ViewData["Page"]!) {
            @:disabled
        }>1</button>
        @if((int)ViewData["Page"]! > 4)
        {
        @:...
        }
        @for(int i=Math.Max((int)ViewData["Page"]! - 2, 2); i<Math.Min((int)ViewData["Page"]! + 2, (int)ViewData["TotalPages"]!); i++)
        {
        <button onclick="search(@i)" style="height: 30px; min-width: 30px" @if(i == (int)ViewData["Page"]!) {
            @:disabled
        }>@i</button>
        }
        @if((int)ViewData["Page"]! + 3 < (int)ViewData["TotalPages"]!)
        {
        @:...
        }
        @if((int)ViewData["TotalPages"]! > 1)
        {
        <button onclick="search(@ViewData["TotalPages"])" style="height: 30px; min-width: 30px" @if((int)ViewData["TotalPages"]! == (int)ViewData["Page"]!) {
            @:disabled
        }>@ViewData["TotalPages"]</button>
        }
    </div>
</div>